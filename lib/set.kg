:"set-theoretic operators"

.comment("*****")
ps(x)       power set
cp(x;y)     cartesian product
union(x;y)  union
isect(x;y)  intersection
enum(x;y)   enumerate x-vectors from set of y elements
comb(k;S)   k-combinations of set S (without replacement)
combr(k;S)  k-combinations of set S with replacement
perm(k;S)   k-permutation of set S
*****

.module(:set)
t::{[a];{x_a}'!#a::x}
c::{[n];:[0=n::x;[]:|1=x;,'y;,/{[t];t::x;(*t),:\c(n-1;1_t)}'t(y)]}
ps::{?:[[]~x;[];[[]],,/(1+!#x){c(x;y)}'(#x)#,x]}
cp::{[a b];b::y;,/{a::x;{a,x}'b}'x}
union::{?x,y}
isect::{[a];a::x;x@,/{a?x}'y}
enum::{[n];(x-1){,/{x,:\!n}'x}:*!n::y}
p1::{:[2>#x;x;,/{(*x),:\p1(1_x)}'(-!#x):+'(#x)#,x]}
tls::{[a];{x_a}'!#a::x}
c3::{[n r s t];n::x;r::z;s::y;
     :[0=n;[]:|""~s;[]:|1=n;,'s;,/{t::x;(*t),:\c3(n-1;r(t);r)}'tls(s)]}
comb::{c3(x;y;{1_x})}
combr::{c3(x;y;{x})}
perm::{:[1=x;,'y;,/p1'comb(x;y)]}
.module(0)
